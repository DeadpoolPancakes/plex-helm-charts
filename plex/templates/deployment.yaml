apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plex.fullname" . }}
  labels:
    {{- include "plex.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "plex.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "plex.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "plex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "plex.fullname" . }}
          env:
            - name: PLEX_UID
              value: "{{ .Values.process.uid }}"
            - name: PLEX_GID
              value: "{{ .Values.process.gid }}"
            {{- with .Values.env }}
              {{- toYaml . | indent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.web.port }}
              protocol: TCP
            {{- range .Values.service.stream.ports.tcp }}
            - name: {{ .name }}-tcp
              containerPort: {{ .port }}
              protocol: TCP
            {{- end }}
            {{- range .Values.service.stream.ports.udp }}
            - name: {{ .name }}-udp
              containerPort: {{ .port }}
              protocol: UDP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /identity
              port: http
          readinessProbe:
            httpGet:
              path: /identity
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
              readOnly: true
            - mountPath: /transcode
              name: transcode
            - mountPath: /tmp
              name: transcode
      volumes:
      - name: config
      {{- if .Values.persistence.config.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.config.existingClaim | default (printf "%s-%s" (include "plex.fullname" .) "config") }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: data
      {{- if .Values.persistence.data.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.data.existingClaim | default (printf "%s-%s" (include "plex.fullname" .) "data") }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: transcode
      {{- if .Values.persistence.transcode.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.transcode.existingClaim | default (printf "%s-%s" (include "plex.fullname" .) "transcode") }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
